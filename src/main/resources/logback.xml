<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 设置变量 -->
	<property name="context.name" value="logback" />

	<!-- Email -->
	<property name="smtpHost" value="192.168.1.10" />
	<property name="username" value="zhu_huiling" />
	<property name="password" value="zhu_huiling" />
	<property name="email_from" value="zhu_huiling@psh.com.cn" />
	<property name="email_to" value="zhu_huiling@psh.com.cn" />
	<property name="ssl" value="false" />
	<property name="email_subject" value="【Error】: %logger" />

	<!-- 设置上下文名称 -->
	<contextName>${context.name}</contextName>

	<!-- 日志输出目的地
		name:appender名称
		class:appender的全路径名称
	 -->
	 <!-- ConsoleAppender -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- filter:LevelFilter,ThresholdFilter,EvaluatorFilter
			过滤器，执行一个过滤器会有返回个枚举值，即DENY，NEUTRAL，ACCEPT其中之一。
			返回DENY，日志将立即被抛弃不再经过其他过滤器；返回NEUTRAL，有序列表里的下个过滤器过接着处理日志；
			返回ACCEPT，日志会被立即处理，不再经过剩余过滤器。
		 -->
		<!-- LevelFilter
			level:设置过滤级别
			onMatch:用于配置符合过滤条件的操作
			onMismatch:用于配置不符合过滤条件的操作
		 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<!-- encoder默认配置为PatternLayoutEncoder -->
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
			<!-- 常用的Pattern变量,大家可打开该pattern进行输出观察 -->
	        <!--
	          <pattern>
	              %d{yyyy-MM-dd HH:mm:ss} [%level] - %msg%n
	              Logger: %logger
	              Class: %class
	              File: %file
	              Caller: %caller
	              Line: %line
	              Message: %m
	              Method: %M
	              Relative: %relative
	              Thread: %thread
	              Exception: %ex
	              xException: %xEx
	              nopException: %nopex
	              rException: %rEx
	              Marker: %marker
	              %n
	          </pattern>
           -->
		</encoder>
	</appender>

	<!-- FileAppender
		file:被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建
			举例说明：
			1./output/file.log:系统盘根目录下创建该路径
			2.output/file.log:项目根路径下创建该路径
			3.D:/output/file.log:D盘根目录下创建该路径
		append:true 日志被追加到文件的末尾；false 清空当前文件进行追加
		encoder:对日志进行格式化
	 -->
	<appender name="file" class="ch.qos.logback.core.FileAppender">
		<file>output/file.log</file>
		<append>true</append>
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="systemFile" class="ch.qos.logback.core.FileAppender">
		<file>/output/file.log</file>
		<append>true</append>
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- RollingFileAppender
		file:被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建
		append:true 日志被追加到文件的末尾；false 清空当前文件进行追加
		encoder:对日志进行格式化
		rollingPolicy:当发生滚动时，决定RollingFileAppender的行为，设计文件移动和重命名
	 -->
	<!-- 每天生产一个日志文件，保存30天的日志文件 -->
	<appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>D:/output/rolling/logFile.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="email" class="ch.qos.logback.classic.net.SMTPAppender">
		<smtpHost>${smtpHost}</smtpHost>
		<Username>${username}</Username>
		<Password>${password}</Password>
		<SSL>${ssl}</SSL>
		<to>${email_to}</to>
		<from>${email_from}</from>
		<subject>${email_subject}</subject>
		<layout class="ch.qos.logback.classic.html.HTMLLayout" >
            <pattern>%date%level%thread%logger{0}%line%message</pattern>
        </layout>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">
                <expression>
                    if(level >= WARN) {
                        return true;
                    }
                    return false;
                </expression>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
	</appender>

	<!-- logger
		name:对于某包或某类进行日志约束
		level:日志级别
		additivity:true 将日志上传给根Logger;false 不将日志上传给根Logger
	 -->
	<logger name="com.pnt.LogbackProject" level="INFO" additivity="false">
		<appender-ref ref="console" />
		<appender-ref ref="file" />
		<appender-ref ref="systemFile" />
		<appender-ref ref="rollingFile" />
		<appender-ref ref="email" />
	</logger>

	<!-- 根logger -->
	<root level="WARN">
		<appender-ref ref="console" />
	</root>
</configuration>